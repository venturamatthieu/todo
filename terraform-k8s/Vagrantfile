Vagrant.configure(2) do |config|

	#config.vm.define "kterraform" do |kterraform|
	#	kterraform.vm.hostname = "kterraform"
	#	kterraform.vm.box = "ubuntu/bionic64"
	#	kterraform.vm.box_url = "ubuntu/bionic64"
	#	kterraform.vm.network "private_network", ip: "192.168.100.5"
	#	kterraform.vm.provider "virtualbox" do |v|
	#		v.customize [ "modifyvm", :id, "--cpus", "1" ]
	#		v.customize [ "modifyvm", :id, "--memory", "1024" ]
	#		v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    # 			v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
	#		v.customize ["modifyvm", :id, "--name", "kterraform"]
	#	end
#		kterraform.vm.provision "shell", path: "install_terraform.sh"
#
#	end

	# master server
	config.vm.define "kmaster" do |kmaster|
		kmaster.vm.box = "ubuntu/bionic64"
		kmaster.vm.hostname = "kmaster"
		kmaster.vm.box_url = "ubuntu/bionic64"
		kmaster.vm.network :private_network, ip: "192.168.100.10"
		kmaster.vm.provider :virtualbox do |v|
		  v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		  v.customize ["modifyvm", :id, "--memory", 2048]
		  v.customize ["modifyvm", :id, "--name", "kmaster"]
		  v.customize ["modifyvm", :id, "--cpus", "2"]
		end
		config.vm.provision "shell", inline: <<-SHELL
		  sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config
		  service ssh restart
		SHELL
		kmaster.vm.provision "shell", path: "install_k8s_common.sh"
		kmaster.vm.provision "shell", path: "install_k8s_master.sh"
	  end

	  numberSrv=0
	  # slave server
	  (1..numberSrv).each do |i|
		config.vm.define "knode#{i}" do |knode|
		  knode.vm.box = "ubuntu/bionic64"
		  knode.vm.hostname = "knode#{i}"
		  knode.vm.network "private_network", ip: "192.168.100.1#{i}"
		  knode.vm.provider "virtualbox" do |v|
			v.name = "knode#{i}"
			v.memory = 1024
			v.cpus = 1
		  end
		  config.vm.provision "shell", inline: <<-SHELL
			sed -i 's/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g' /etc/ssh/sshd_config    
			service ssh restart
		  SHELL
		  knode.vm.provision "shell", path: "install_k8s_common.sh"
		  knode.vm.provision "shell", path: "install_k8s_nodes.sh"
		end
	  end

end
